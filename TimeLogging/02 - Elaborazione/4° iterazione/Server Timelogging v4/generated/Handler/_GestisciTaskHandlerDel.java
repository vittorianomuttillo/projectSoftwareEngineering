// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `creaTaskHandler.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Handler;

public interface _GestisciTaskHandlerDel extends Ice._ObjectDel
{
    void creaTask(String NomeProgetto, String NomeSottoprogetto, String Descrizione, java.util.List<String[]> IdDipendente, String nomeTask, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    String getSottoprogetti(int idManager, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    String getDipendenti(java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    java.util.List<String[]> aggiornaElencoDipendenti(java.util.List<String[]> elencoDip, int idDipendente, String unita, double quantita, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    String getInfoSottoprogetto(String nomeProgetto, String nomeSottoprogetto, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    String getInfoTask(String nomeProgetto, String nomeSottoprogetto, String nomeTask, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    void cancellaTask(String aNomeProgetto, String aNomeSottoprogetto, String nomeTask, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    void modificaTask(String aNomeProgetto, String aNomeSottoprogetto, String aDescrizione, String nomeTask, String oldNomeTask, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    void aggiungiDipendente(String aNomeProgetto, String aNomeSottoprogetto, String nomeTask, int IdDipendente, String unita, double quantita, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    void eliminaDipendente(String aNomeProgetto, String aNomeSottoprogetto, String nomeTask, int IdDipendente, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;

    void sostituisciDipendente(String aNomeProgetto, String aNomeSottoprogetto, String nomeTask, int IdDipendente, String unita, double quantita, int IdDipendenteOld, java.util.Map<String, String> __ctx, Ice.Instrumentation.InvocationObserver __obsv)
        throws IceInternal.LocalExceptionWrapper;
}
