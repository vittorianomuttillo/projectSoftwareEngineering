// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `InserisciTimerecord.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Handler;

public interface InserisciTimerecordHandlerPrx extends Ice.ObjectPrx
{
    public String getElencoTask(int id);

    public String getElencoTask(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getElencoTask(int id);

    public Ice.AsyncResult begin_getElencoTask(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getElencoTask(int id, Ice.Callback __cb);

    public Ice.AsyncResult begin_getElencoTask(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getElencoTask(int id, Callback_InserisciTimerecordHandler_getElencoTask __cb);

    public Ice.AsyncResult begin_getElencoTask(int id, java.util.Map<String, String> __ctx, Callback_InserisciTimerecordHandler_getElencoTask __cb);

    public String end_getElencoTask(Ice.AsyncResult __result);

    public boolean inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip);

    public boolean inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip);

    public Ice.AsyncResult begin_inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip, Ice.Callback __cb);

    public Ice.AsyncResult begin_inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip, Callback_InserisciTimerecordHandler_inserisciTimerecord __cb);

    public Ice.AsyncResult begin_inserisciTimerecord(String descrizione, long datai, long dataf, long secondi, String nomeTask, String sottoprogetto, String progetto, int idDip, java.util.Map<String, String> __ctx, Callback_InserisciTimerecordHandler_inserisciTimerecord __cb);

    public boolean end_inserisciTimerecord(Ice.AsyncResult __result);
}
